C51 COMPILER V9.54   MAIN                                                                  12/12/2019 15:19:16 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\keil_V5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /**************************************************************************************
   2          *                 DS18B20温度传感器实验                         *
   3          实现现象：  具体接线操作请看视频。
   4                下载程序后，在温度传感器接口处，按照丝印方向插好温度传感器，数码管就会显示
   5                检测的温度值，
   6          注意事项：                                          
   7          ***************************************************************************************/
   8          
   9          #include "reg52.h"       //此文件中定义了单片机的一些特殊功能寄存器
  10          #include"temp.h"  
  11          
  12          #define u16 unsigned int
  13          #define u8 unsigned char
  14          
  15           u8 CNCHAR[6] = "摄氏度";
  16          
  17          
  18          /*******************************************************************************
  19          * 函 数 名         : datapros()
  20          * 函数功能       : 温度读取处理转换函数
  21          * 输    入         : temp
  22          * 输    出         : 无
  23          *******************************************************************************/
  24          
  25          void datapros(int temp)    
  26          {
  27   1        unsigned char i, datas[] = {0, 0, 0, 0, 0};
  28   1          float tp;  
  29   1        if(temp< 0)       //当温度值为负数
  30   1          {
  31   2      
  32   2          SBUF='-';//将接收到的数据放入到发送寄存器
  33   2          while(!TI);              //等待发送数据完成
  34   2          TI=0;            //清除发送完成标志位
  35   2          temp=temp-1;
  36   2          temp=~temp;
  37   2          tp=temp;
  38   2          temp=tp*0.0625*100+0.5; 
  39   2          //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  40   2          //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  41   2          //算加上0.5，还是在小数点后面。
  42   2       
  43   2          }
  44   1        else
  45   1          {     
  46   2          SBUF='+';//将接收到的数据放入到发送寄存器
  47   2          while(!TI);              //等待发送数据完成
  48   2          TI=0;            //清除发送完成标志位
  49   2          tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
  50   2          //如果温度是正的那么，那么正数的原码就是补码它本身
  51   2          temp=tp*0.0625*100+0.5; 
  52   2          //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  53   2          //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  54   2          //算加上0.5，还是在小数点后面。
C51 COMPILER V9.54   MAIN                                                                  12/12/2019 15:19:16 PAGE 2   

  55   2        }
  56   1        datas[0] = temp / 10000;
  57   1        datas[1] = temp % 10000 / 1000;
  58   1        datas[2] = temp % 1000 / 100;
  59   1        datas[3] = temp % 100 / 10;
  60   1        datas[4] = temp % 10;
  61   1        
  62   1        SBUF = '0'+datas[0];//将接收到的数据放入到发送寄存器
  63   1        while (!TI);               //等待发送数据完成
  64   1        TI = 0;
  65   1        
  66   1        SBUF = '0'+datas[1];//将接收到的数据放入到发送寄存器
  67   1        while (!TI);               //等待发送数据完成
  68   1        TI = 0;
  69   1        
  70   1        SBUF = '0'+datas[2];//将接收到的数据放入到发送寄存器
  71   1        while (!TI);               //等待发送数据完成
  72   1        TI = 0;
  73   1        
  74   1        
  75   1        SBUF = '.';//将接收到的数据放入到发送寄存器
  76   1        while (!TI);               //等待发送数据完成
  77   1        TI = 0;
  78   1        
  79   1        
  80   1        SBUF = '0'+datas[3];//将接收到的数据放入到发送寄存器
  81   1        while (!TI);               //等待发送数据完成
  82   1        TI = 0;
  83   1        
  84   1        SBUF = '0'+datas[4];//将接收到的数据放入到发送寄存器
  85   1        while (!TI);               //等待发送数据完成
  86   1        TI = 0;
  87   1        
  88   1        for(i=0; i<6; i++)
  89   1        {
  90   2          SBUF = CNCHAR[i];//将接收到的数据放入到发送寄存器
  91   2          while (!TI);               //等待发送数据完成
  92   2          TI = 0;
  93   2        }
  94   1      }
  95          
  96          
  97          
  98          
  99          /*******************************************************************************
 100          * 函 数 名         :UsartConfiguration()
 101          * 函数功能       :设置串口
 102          * 输    入         : 无
 103          * 输    出         : 无
 104          *******************************************************************************/
 105          
 106          void UsertConfiguration()
 107          {
 108   1        SCON=0X50;      //设置为工作方式1
 109   1        TMOD=0X20;      //设置计数器工作方式2
 110   1        PCON=0X80;      //波特率加倍
 111   1        TH1=0XF3;       //计数器初始值设置，注意波特率是4800的
 112   1        TL1=0XF3;
 113   1      //  ES=1;           //打开接收中断
 114   1      //  EA=1;           //打开总中断
 115   1        TR1=1;          //打开计数器
 116   1      }
C51 COMPILER V9.54   MAIN                                                                  12/12/2019 15:19:16 PAGE 3   

 117          /***************************
 118          串口初始化
 119          ****************************/
 120          void StartInit()
 121          {
 122   1      
 123   1          TMOD=0x20;
 124   1          TH1=0xF3;
 125   1          TL1=0xF3;
 126   1          PCON=0x80;
 127   1          TR1=1;
 128   1          SCON=0x50; 
 129   1          EA=1;
 130   1          ES=1;
 131   1      }
 132          /*******************************************************************************
 133          * 函 数 名       : main
 134          * 函数功能     : 主函数
 135          * 输    入       : 无
 136          * 输    出       : 无
 137          *******************************************************************************/
 138          void main()
 139          { 
 140   1        StartInit();
 141   1        while(1)
 142   1        {
 143   2          datapros(Ds18b20ReadTemp());   //数据处理函数
 144   2        }   
 145   1      }
 146          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    351    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
